import org.flywaydb.gradle.task.FlywayMigrateTask

buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath "org.flywaydb:flyway-database-postgresql:11.8.0"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.flywaydb.flyway' version '11.8.0'
}

group = 'com.auth'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.security:spring-security-core:6.5.5'
	implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.6'

	implementation 'io.github.cdimascio:dotenv-java:3.2.0'
	implementation 'org.flywaydb:flyway-core:11.8.0'
	implementation 'org.flywaydb:flyway-database-postgresql'
	implementation 'org.postgresql:postgresql'
	implementation 'org.mapstruct:mapstruct:1.6.3'
	implementation 'dev.shamil:ulid4j:1.0'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.5'
    implementation 'org.hibernate.validator:hibernate-validator:8.0.0.Final'

    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'
}

flyway {
	url =  System.getenv('DB_URL')
	user = System.getenv('DB_USER')
	password = System.getenv('DB_PASSWORD')
	locations = ['filesystem:src/main/resources/db/migration']
	cleanDisabled = false
}

tasks.register('flywayMigrateDev', FlywayMigrateTask) {
    url = System.getenv('DB_URL')
    user = System.getenv('DB_USER')
    password = System.getenv('DB_PASSWORD')
    locations = ['filesystem:src/main/resources/db/migration']
}

tasks.register('flywayMigrateTest', FlywayMigrateTask) {
    url = 'jdbc:postgresql://localhost:5432/bb_db_test'
    user = 'root'
    password = 'root'
    locations = ['filesystem:src/main/resources/db/migration']
}

// Exemple de tâche par défaut choisie selon profile
tasks.register('flywayMigrateEnv') {
    dependsOn execProfile == 'test' ? tasks.named('flywayMigrateTest') : tasks.named('flywayMigrateDev')
}

// we need to build classes before we can migrate
flywayMigrate.dependsOn classes

tasks.named('test') {
	useJUnitPlatform()
}
